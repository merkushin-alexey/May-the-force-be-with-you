version: '3'
services:
    web:
        image: nginx:alpine
        container_name: frozeneon-nginx
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        image: frenzzyekb/php-dev:7.3
        container_name: frozeneon-php
        restart: always
        environment:
            PHP_INI_SCAN_DIR: "/usr/local/etc/php/custom.d:/usr/local/etc/php/conf.d"
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/custom.d"
            - "./web:/var/www/html"
        working_dir: "/var/www/html"
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: frozeneon-phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=frozeneon-mysql
        restart: always
        depends_on:
            - mysqldb
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        platform: linux/amd64
        container_name: frozeneon-mysql
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
            - "./db_dump/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql"
